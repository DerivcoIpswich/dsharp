<Project>
  
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    <ToolsPath>$(MSBuildThisFileDirectory)..\tools\$(TargetFramework)\</ToolsPath>
    <DSharpBuildAssembly>$(ToolsPath)DSharp.Build.dll</DSharpBuildAssembly>
  </PropertyGroup>
  
  <UsingTask TaskName="ScriptCompilerTask" AssemblyFile="$(DSharpBuildAssembly)" />
  <UsingTask TaskName="ResXCodeGeneratorTask" AssemblyFile="$(DSharpBuildAssembly)" />

  <Target Name="BuildScript" Returns="@(Scripts)" AfterTargets="Build">
    <ScriptCompilerTask
      Sources="@(Compile)"
      Resources="@(EmbeddedResource)"
      References="@(ReferencePath);@(ReferenceDependencyPaths)"
      AssemblyName ="$(AssemblyName)"
      Defines="$(DefineConstants)"
      Minimize="$(MinimizeScript)"
      CopyReferences="$(CopyReferences)"
      CopyReferencesPath="$(CopyReferencesPath)"
      OutputPath="$(OutputPath)"
      Assembly="@(IntermediateAssembly)"
      ScriptName="$(ScriptName)"
      ProjectPath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="Scripts" ItemName="Scripts" />
    </ScriptCompilerTask>
  </Target>

  <Target Name="GenerateResourcesCode" Inputs="@(EmbeddedResource)" Outputs="@(GeneratedResourceCode)">
    <ResXCodeGeneratorTask
      Resources="@(EmbeddedResource)"
      GeneratedCode="@(GeneratedResourceCode)"
      Namespace="$(RootNamespace)" />
    <ItemGroup>
      <Compile Include="@(GeneratedResourceCode)" />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <BuildDependsOn Condition="'$(GenerateScript)' == 'True'">$(BuildDependsOn);BuildScript</BuildDependsOn>
    <CompileDependsOn Condition="'$(GenerateResources)' == 'True'">GenerateResourcesCode;$(CompileDependsOn)</CompileDependsOn>
  </PropertyGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk"/>
</Project>