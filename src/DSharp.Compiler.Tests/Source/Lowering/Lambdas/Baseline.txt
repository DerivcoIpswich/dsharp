"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;
  // LoweringTests.Test

  function Test() {
    this.bar = 0;
    this._getFalse = function() {
      return false;
    };
    var addOne = function(a) {
      return a + 1;
    };
    var sum = function(a, b) {
      return a + b;
    };
    var doNothing = function() {
    };
    var doSomething = function(a) {
      if (!a) {
        return;
      }
    };
    var foo = ss.createGenericType(GenericClass_$1, {T : Test});
    var nested = function(x) {
      return x.method(function(a) {
        return a.bar++;
      });
    };
    foo.method(function(a) {
      return a.bar++;
    });
  }
  var Test$ = {

  };


  // LoweringTests.GenericClass`1

  function GenericClass_$1() {
  }
  var GenericClass_$1$ = {
    method: function(action) {
    }
  };


  var $exports = ss.module('test', null,
    {
      Test: ss.defineClass(Test, Test$, [], null),
      GenericClass_$1: ss.defineClass(GenericClass_$1, GenericClass_$1$, [], null)
    });


  return $exports;
});
