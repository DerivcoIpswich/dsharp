"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;
  // DateTimeTest.TestClass

  function TestClass() {
    var jsDate = new Date();
    var dateTime;
    dateTime = jsDate;
    jsDate = dateTime;
    dateTime = new ss.DateTime(2019, 12, 24);
    dateTime = new ss.DateTime(2019, 12, 24, 23, 45, 0);
    dateTime = new ss.DateTime(2019, 12, 24, 23, 45, 0, 2);
    ss.DateTime.Equals(dateTime, dateTime);
    var same = dateTime === dateTime;
    var dayOfWeek = dateTime.DayOfWeek;
    var enumComparison = dayOfWeek === ss.DayOfWeek.saturday;
    var year = dateTime.Year;
    var month = dateTime.Month;
    var day = dateTime.Day;
    var hour = dateTime.Hour;
    var minute = dateTime.Minute;
    var second = dateTime.Second;
    var millisecond = dateTime.Millisecond;
    dateTime = ss.DateTime.Now;
    dateTime = ss.DateTime.Today;
    dateTime = ss.DateTime.AddMilliseconds(dateTime, 123);
    dateTime = ss.DateTime.AddSeconds(dateTime, 4);
    dateTime = ss.DateTime.AddMinutes(dateTime, 10);
    dateTime = ss.DateTime.AddHours(dateTime, 1);
    dateTime = ss.DateTime.AddDays(dateTime, 2);
    var longDate = ss.DateTime.ToLongDateString(dateTime);
    var longTime = ss.DateTime.ToLongTimeString(dateTime);
    var shortDate = ss.DateTime.ToShortDateString(dateTime);
    var shortTime = ss.DateTime.ToShortTimeString(dateTime);
    var toString = ss.DateTime.ToStringFormatted(dateTime);
    var formattedString = ss.DateTime.ToStringFormatted(dateTime, '');
    var parsedDate = ss.DateTime.Parse('');
    var notEqual = dateTime !== parsedDate;
    var greaterThan = dateTime > parsedDate;
    var greaterOrEqual = dateTime >= parsedDate;
    var lesserThan = dateTime < parsedDate;
    var lesserOrEqual = dateTime < parsedDate;
  }
  var TestClass$ = {

  };


  var $exports = ss.module('test', null,
    {
      TestClass: ss.defineClass(TestClass, TestClass$, [], null)
    });


  return $exports;
});
