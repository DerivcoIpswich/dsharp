"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;
  // ComparableTest.TestClass

  function TestClass() {
    var obj = ss.initializeObject(new TestObject(), {Text: 'Hello'});
    var x = obj.compare(obj);
    if (ss.canCast(obj, ss.IComparable_$1)) {
      obj.Text = 'wow';
    }
  }
  var TestClass$ = {

  };


  // ComparableTest.TestObject

  function TestObject() {
    ss.defineProperty(this, 'Text');
  }
  var TestObject$ = {
    compare: function(other) {
      return (this.Text === other.Text) ? 0 : -1;
    }
  };


  var $exports = ss.module('test', null,
    {
      TestClass: ss.defineClass(TestClass, TestClass$, [], null),
      TestObject: ss.defineClass(TestObject, TestObject$, [], null, [ss.IComparable_$1])
    });


  return $exports;
});
