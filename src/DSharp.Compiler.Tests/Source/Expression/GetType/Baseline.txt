"use strict";

define('test', ['DSharp'], function(DSharp) {
  var $global = this;

  // ExpressionTests.App

  function App() {
  }
  var App$ = {
    $get_Foo: function() {
      return 0;
    },
    test: function(x) {
      var t = DSharp.typeOf(x);
      var t2 = DSharp.typeOf(x.toString());
      var t3 = DSharp.typeOf(this.Foo);
      var t4 = DSharp.type('String');
      var t5 = DSharp.type('test.Foo');
      var b1 = DSharp.canAssign((Object), App);
      var b2 = DSharp.canAssign((DSharp.IDisposable), App);
      var b3 = DSharp.canAssign(t, App);
      var b4 = DSharp.instanceOf((App), new App());
      var b5 = DSharp.instanceOf((DSharp.IDisposable), new App());
      var b6 = DSharp.instanceOf(t, new App());
      var b7 = DSharp.isInterface(t) || DSharp.isClass(t);
      var n = DSharp.typeName(t);
    }
  };


  var $exports = DSharp.module('test', null,
    {
      App: DSharp.defineClass(App, App$, [], null)
    });


  return $exports;
});
