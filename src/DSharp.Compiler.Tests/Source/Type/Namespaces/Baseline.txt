"use strict";

define('test', ['DSharp'], function(DSharp) {
  var $global = this;

  // TypeTests.Sub1.Sub2.MyClass

  function MyClass() {
    var yc = new YourClass();
    yc.run();
  }
  var MyClass$ = {

  };


  // TypeTests.Sub1.YourClass

  function YourClass() {
  }
  var YourClass$ = {
    run: function() {
    }
  };


  // TypeTests.YourClass1

  function YourClass1() {
  }
  var YourClass1$ = {

  };


  // MyApp.Foo.MyClassF

  function MyClassF() {
  }
  var MyClassF$ = {

  };


  // MyApp.Test

  function Test() {
    var c = new MyClass();
  }
  var Test$ = {

  };


  // MyCompany.Utility

  function Utility() {
  }
  var Utility$ = {
    run: function() {
    }
  };


  // MyCompany.MyProduct.UtilityP

  function UtilityP() {
  }
  var UtilityP$ = {

  };


  // MyCompany.MyProduct.MyComponent.Component

  function Component() {
    var u = new Utility();
    u.run();
  }
  var Component$ = {

  };


  var $exports = DSharp.module('test', null,
    {
      MyClass: DSharp.defineClass(MyClass, MyClass$, [], null),
      YourClass: DSharp.defineClass(YourClass, YourClass$, [], null),
      YourClass1: DSharp.defineClass(YourClass1, YourClass1$, [], null),
      MyClassF: DSharp.defineClass(MyClassF, MyClassF$, [], null),
      Test: DSharp.defineClass(Test, Test$, [], null),
      Utility: DSharp.defineClass(Utility, Utility$, [], null),
      UtilityP: DSharp.defineClass(UtilityP, UtilityP$, [], null),
      Component: DSharp.defineClass(Component, Component$, [], null)
    });


  return $exports;
});
