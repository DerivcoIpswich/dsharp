"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;
  // MemberTests.Test

  function Test() {
  }
  var Test$ = {
    do1: function() {
    },
    do2: function() {
      return 0;
    },
    do3: function(i, j) {
      return i;
    },
    do4: ss.paramsGenerator(1, function(zero, stuff) {
      return stuff.length;
    }),
    do5: ss.paramsGenerator(0, function(stuff) {
    }),
    do6: ss.paramsGenerator(1, function($TArgs, someValues) {
    }),
    do7: function(a, b) {
      b = (Object.getOwnPropertyDescriptor(arguments, 1)) ? b : 2;
    },
    do8: function(a, b, c, d) {
      a = (Object.getOwnPropertyDescriptor(arguments, 0)) ? a : 1;
      b = (Object.getOwnPropertyDescriptor(arguments, 1)) ? b : 2;
      c = (Object.getOwnPropertyDescriptor(arguments, 2)) ? c : '3';
      d = (Object.getOwnPropertyDescriptor(arguments, 3)) ? d : '4';
      this.do8(1, 1, '3', '4');
      this.do8();
      this.do8(1);
      this.do8(1, 2);
      this.do8(1, 2, '3');
      this.do8(1, 2, '3', '4');
      this.do8();
      this.do8(1, 2, '3', '4');
      this.do8(1, 2, '3', '2');
      this.do8(1, 2, '3', '3');
    },
    run: function() {
      this.do1();
      var v = this.do2();
      var s = ss.string('A', 3);
      var i = s.indexOf('A');
      i = s.indexOf('A', 1);
      var ln = this.do4(0, 1, 2, 3, 'a', 'b', 'c', true, false);
      this.do5();
      this.do6({T: Number}, 1, 2, 3);
      this.do6({T: ss.getGenericConstructor(X$Y_$1, {T: String})});
      this.do3(2, 5);
      this.do7(1);
    },
    toString: function() {
      var x = new X();
      return null;
    }
  };


  // MemberTests.X

  function X() {
  }
  var X$ = {
    update: function(i) {
    }
  };


  // MemberTests.X$Y`1

  function X$Y_$1() {
  }
  var X$Y_$1$ = {

  };


  var $module = ss.module('test', null,
    {
      Test: ss.defineClass(Test, Test$, [], null),
      X: ss.defineClass(X, X$, [], null),
      X$Y_$1: ss.defineClass(X$Y_$1, X$Y_$1$, [], null)
    });
  var $exports = $module.api;


  return $exports;
});
