"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;
  // MemberTests.IGrouping`2

  function IGrouping_$2() { }


  // MemberTests.Grouping`2

  function Grouping_$2() {
  }
  var Grouping_$2$ = {

  };


  // MemberTests.GenericTestExtensions

  function GenericTestExtensions() {
  }
  GenericTestExtensions.doExtension = function($TArgs, i, a, b, c) {
    GenericTest_$2.doStatic3.call(ss.getGenericConstructor(GenericTest_$2,{T1 : $TArgs['T1'], T2 : $TArgs['T2']}),{T: $TArgs['T']}, a, b, c);
    i.doInstance({T: $TArgs['T']}, a, b, c);
  };
  GenericTestExtensions.firstOrDefault = function($TArgs, source, defaultV) {
    return defaultV;
  };


  // MemberTests.GenericTest`2

  function GenericTest_$2() {
  }
  GenericTest_$2.doStatic = function() {
  };
  GenericTest_$2.doStatic2 = function(a, b) {
  };
  GenericTest_$2.doStatic3 = function($TArgs, a, b, c) {
  };
  var GenericTest_$2$ = {
    doInstance: function($TArgs, a, b, c) {
    }
  };


  // MemberTests.Test

  function Test() {
  }
  var Test$ = {
    do1: function() {
      GenericTest_$2.doStatic.call(ss.getGenericConstructor(GenericTest_$2,{T1 : Number, T2 : String}));
      GenericTest_$2.doStatic2.call(ss.getGenericConstructor(GenericTest_$2,{T1 : Boolean, T2 : Number}),false, 42);
      GenericTest_$2.doStatic3.call(ss.getGenericConstructor(GenericTest_$2,{T1 : Boolean, T2 : Number}),{T: String}, false, 42, 'wow');
      var instance = ss.createGenericType(GenericTest_$2, {T1 : Number, T2 : String});
      GenericTestExtensions.doExtension({T1: Number, T2: String, T: String}, instance, 42, 'wow', '2');
      var x = null;
      GenericTestExtensions.firstOrDefault({T: Number}, x, 1234);
    },
    do2: function() {
      return 0;
    },
    do3: function(i, j) {
      return i;
    },
    do4: ss.paramsGenerator(1, function(zero, stuff) {
      return stuff.length;
    }),
    do5: ss.paramsGenerator(0, function(stuff) {
    }),
    do6: ss.paramsGenerator(1, function($TArgs, someValues) {
    }),
    do7: function(a, b) {
      b = (Object.getOwnPropertyDescriptor(arguments, 1)) ? b : 2;
    },
    do8: function(a, b, c, d) {
      a = (Object.getOwnPropertyDescriptor(arguments, 0)) ? a : 1;
      b = (Object.getOwnPropertyDescriptor(arguments, 1)) ? b : 2;
      c = (Object.getOwnPropertyDescriptor(arguments, 2)) ? c : '3';
      d = (Object.getOwnPropertyDescriptor(arguments, 3)) ? d : '4';
      this.do8(1, 1, '3', '4');
      this.do8();
      this.do8(1);
      this.do8(1, 2);
      this.do8(1, 2, '3');
      this.do8(1, 2, '3', '4');
      this.do8();
      this.do8(1, 2, '3', '4');
      this.do8(1, 2, '3', '2');
      this.do8(1, 2, '3', '3');
    },
    run: function() {
      this.do1();
      var v = this.do2();
      var s = ss.string('A', 3);
      var i = s.indexOf('A');
      i = s.indexOf('A', 1);
      var ln = this.do4(0, 1, 2, 3, 'a', 'b', 'c', true, false);
      this.do5();
      this.do6({T: Number}, 1, 2, 3);
      this.do6({T: ss.getGenericConstructor(X$Y_$1, {T: String})});
      this.do3(2, 5);
      this.do7(1);
      this.doSomethingCrazy('lo', 'co');
    },
    doSomethingCrazy: function(a, b) {
      b = (Object.getOwnPropertyDescriptor(arguments, 1)) ? b : 'co';
      return a + b;
    },
    toString: function() {
      var x = new X();
      return null;
    }
  };


  // MemberTests.X

  function X() {
  }
  var X$ = {
    update: function(i) {
    }
  };


  // MemberTests.X$Y`1

  function X$Y_$1() {
  }
  var X$Y_$1$ = {

  };


  var $module = ss.module('test', null,
    {
      IGrouping_$2: ss.defineInterface(IGrouping_$2, [ss.IEnumerable_$1, ss.IEnumerable]),
      Grouping_$2: ss.defineClass(Grouping_$2, Grouping_$2$, [], null, function (registry) { return [ss.makeMappedGenericTemplate(registry.IGrouping_$2, {TKey : 'TKey', TElement : 'TElement'})]}),
      GenericTestExtensions: ss.defineClass(GenericTestExtensions, null, [], null),
      GenericTest_$2: ss.defineClass(GenericTest_$2, GenericTest_$2$, [], null),
      Test: ss.defineClass(Test, Test$, [], null),
      X: ss.defineClass(X, X$, [], null),
      X$Y_$1: ss.defineClass(X$Y_$1, X$Y_$1$, [], null)
    });
  var $exports = $module.api;


  return $exports;
});
